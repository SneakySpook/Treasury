package rhmodding.treasury.util

import javafx.scene.image.Image
import java.io.ByteArrayInputStream
import java.io.File
import java.io.InputStream


object TreasuryIcon {
    
    private val byteArray: ByteArray = byteArrayOf(0x89.toByte(), 0x50.toByte(), 0x4E.toByte(), 0x47.toByte(), 0xD.toByte(), 0xA.toByte(), 0x1A.toByte(), 0xA.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0xD.toByte(), 0x49.toByte(), 0x48.toByte(), 0x44.toByte(), 0x52.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0x20.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0x20.toByte(), 0x8.toByte(), 0x6.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0x73.toByte(), 0x7A.toByte(), 0x7A.toByte(), 0xF4.toByte(), 0x0.toByte(), 0x0.toByte(), 0x1.toByte(), 0x39.toByte(), 0x49.toByte(), 0x44.toByte(), 0x41.toByte(), 0x54.toByte(), 0x58.toByte(), 0x9.toByte(), 0x63.toByte(), 0x8C.toByte(), 0xF.toByte(), 0xF7.toByte(), 0xFF.toByte(), 0xCF.toByte(), 0x80.toByte(), 0x5.toByte(), 0x88.toByte(), 0xDE.toByte(), 0xB8.toByte(), 0x85.toByte(), 0x45.toByte(), 0x94.toByte(), 0x7C.toByte(), 0xA1.toByte(), 0xD7.toByte(), 0x1A.toByte(), 0x6A.toByte(), 0x58.toByte(), 0x35.toByte(), 0x33.toByte(), 0x61.toByte(), 0x15.toByte(), 0xA5.toByte(), 0xA3.toByte(), 0x20.toByte(), 0x8B.toByte(), 0xB3.toByte(), 0xA1.toByte(), 0x16.toByte(), 0xD8.toByte(), 0xBA.toByte(), 0xBD.toByte(), 0xE7.toByte(), 0xAF.toByte(), 0xE1.toByte(), 0xB5.toByte(), 0xD6.toByte(), 0x5C.toByte(), 0x99.toByte(), 0x17.toByte(), 0xAF.toByte(), 0x3C.toByte(), 0x21.toByte(), 0xC9.toByte(), 0xEF.toByte(), 0x38.toByte(), 0xEC.toByte(), 0x19.toByte(), 0xF8.toByte(), 0x10.toByte(), 0x20.toByte(), 0xE4.toByte(), 0x72.toByte(), 0x98.toByte(), 0xFC.toByte(), 0xC9.toByte(), 0xBB.toByte(), 0x9F.toByte(), 0x61.toByte(), 0x4C.toByte(), 0xB2.toByte(), 0x68.toByte(), 0x3D.toByte(), 0x33.toByte(), 0xEC.toByte(), 0xDA.toByte(), 0x86.toByte(), 0x4E.toByte(), 0x8.toByte(), 0x50.toByte(), 0x9C.toByte(), 0x6.toByte(), 0xB0.toByte(), 0x7.toByte(), 0x0.toByte(), 0xC3.toByte(), 0x80.toByte(), 0x87.toByte(), 0xC0.toByte(), 0xA8.toByte(), 0x3.toByte(), 0x58.toByte(), 0x70.toByte(), 0x44.toByte(), 0xD.toByte(), 0x86.toByte(), 0xB0.toByte(), 0x78.toByte(), 0xE1.toByte(), 0x44.toByte(), 0xB0.toByte(), 0xD8.toByte(), 0x83.toByte(), 0xA3.toByte(), 0x9B.toByte(), 0x30.toByte(), 0xE4.toByte(), 0x90.toByte(), 0x5.toByte(), 0x96.toByte(), 0xAF.toByte(), 0x3E.toByte(), 0x4.toByte(), 0xE6.toByte(), 0x6A.toByte(), 0xFF.toByte(), 0x79.toByte(), 0x87.toByte(), 0x2C.toByte(), 0xCC.toByte(), 0x30.toByte(), 0xF4.toByte(), 0x73.toByte(), 0x1.toByte(), 0xCC.toByte(), 0xE7.toByte(), 0x97.toByte(), 0xF7.toByte(), 0xBD.toByte(), 0x1.toByte(), 0xFB.toByte(), 0xEC.toByte(), 0x95.toByte(), 0xE0.toByte(), 0x2B.toByte(), 0x14.toByte(), 0x1F.toByte(), 0xA2.toByte(), 0x73.toByte(), 0xD0.toByte(), 0x73.toByte(), 0xCD.toByte(), 0x77.toByte(), 0x74.toByte(), 0x5.toByte(), 0x50.toByte(), 0xFE.toByte(), 0x80.toByte(), 0x27.toByte(), 0x42.toByte(), 0xA2.toByte(), 0xD3.toByte(), 0x0.toByte(), 0xBA.toByte(), 0x7.toByte(), 0x5E.toByte(), 0xDD.toByte(), 0x81.toByte(), 0x84.toByte(), 0x4.toByte(), 0x4C.toByte(), 0x5C.toByte(), 0x4C.toByte(), 0x45.toByte(), 0x4.toByte(), 0xC6.toByte(), 0x24.toByte(), 0x89.toByte(), 0x1E.toByte(), 0xF0.toByte(), 0x10.toByte(), 0x18.toByte(), 0x75.toByte(), 0x0.toByte(), 0xB.toByte(), 0xAE.toByte(), 0x76.toByte(), 0x0.toByte(), 0xAE.toByte(), 0x16.toByte(), 0xC.toByte(), 0xB1.toByte(), 0x11.toByte(), 0xBC.toByte(), 0x85.toByte(), 0x55.toByte(), 0x12.toByte(), 0x55.toByte(), 0x29.toByte(), 0x8E.toByte(), 0xF6.toByte(), 0xC6.toByte(), 0x80.toByte(), 0x47.toByte(), 0x1.toByte(), 0xB.toByte(), 0x7A.toByte(), 0x6A.toByte(), 0x46.toByte(), 0x75.toByte(), 0x36.toByte(), 0x12.toByte(), 0xCF.toByte(), 0x10.toByte(), 0x89.toByte(), 0x4D.toByte(), 0x4.toByte(), 0x93.toByte(), 0x58.toByte(), 0x73.toByte(), 0x7.toByte(), 0x3E.toByte(), 0x4.toByte(), 0xB6.toByte(), 0x9F.toByte(), 0x3D.toByte(), 0xCA.toByte(), 0x8.toByte(), 0xF2.toByte(), 0x10.toByte(), 0x7A.toByte(), 0xEB.toByte(), 0x98.toByte(), 0x50.toByte(), 0xAB.toByte(), 0x98.toByte(), 0x50.toByte(), 0xBE.toByte(), 0x47.toByte(), 0xAF.toByte(), 0xB.toByte(), 0x60.toByte(), 0x69.toByte(), 0xA.toByte(), 0x16.toByte(), 0x32.toByte(), 0x30.toByte(), 0x7B.toByte(), 0x7.toByte(), 0x3E.toByte(), 0x4.toByte(), 0x88.toByte(), 0x88.toByte(), 0x4E.toByte(), 0xB0.toByte(), 0x12.toByte(), 0x58.toByte(), 0x2D.toByte(), 0x7.toByte(), 0x57.toByte(), 0xFF.toByte(), 0x16.toByte(), 0xCE.toByte(), 0xC2.toByte(), 0xCA.toByte(), 0x40.toByte(), 0xAF.toByte(), 0xB.toByte(), 0xB6.toByte(), 0x60.toByte(), 0x55.toByte(), 0xC5.toByte(), 0x30.toByte(), 0xF0.toByte(), 0x2D.toByte(), 0x22.toByte(), 0xA2.toByte(), 0xEB.toByte(), 0x82.toByte(), 0x24.toByte(), 0xF9.toByte(), 0xDF.toByte(), 0x38.toByte(), 0xFC.toByte(), 0x40.toByte(), 0x99.toByte(), 0xF0.toByte(), 0xD0.toByte(), 0x49.toByte(), 0x3.toByte(), 0x94.toByte(), 0xF6.toByte(), 0xB.toByte(), 0x18.toByte(), 0x34.toByte(), 0xD0.toByte(), 0x4A.toByte(), 0x46.toByte(), 0x68.toByte(), 0xC0.toByte(), 0xD.toByte(), 0x9E.toByte(), 0x10.toByte(), 0x80.toByte(), 0xE5.toByte(), 0x4F.toByte(), 0x58.toByte(), 0x8C.toByte(), 0xBE.toByte(), 0x62.toByte(), 0x11.toByte(), 0x82.toByte(), 0x31.toByte(), 0xA9.toByte(), 0x43.toByte(), 0xA3.toByte(), 0xB5.toByte(), 0x1F.toByte(), 0x60.toByte(), 0x86.toByte(), 0xE.toByte(), 0x78.toByte(), 0x8.toByte(), 0x0.toByte(), 0x0.toByte(), 0x8F.toByte(), 0xB4.toByte(), 0x4C.toByte(), 0x28.toByte(), 0x94.toByte(), 0xC2.toByte(), 0x51.toByte(), 0x79.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0x0.toByte(), 0x49.toByte(), 0x45.toByte(), 0x4E.toByte(), 0x44.toByte(), 0xAE.toByte(), 0x42.toByte(), 0x60.toByte(), 0x82.toByte())
    
    val icon32: Image = Image(ByteArrayInputStream(byteArray), 32.0, 32.0, true, false)
    val icon64: Image by lazy { Image(ByteArrayInputStream(byteArray), 64.0, 64.0, true, false) }
    val icon128: Image by lazy { Image(ByteArrayInputStream(byteArray), 128.0, 128.0, true, false) }
    
    fun toStringedByteArray(stream: InputStream): String {
        val str = StringBuilder("byteArrayOf(")
        while (stream.available() > 0) {
            str.append("0x${stream.read().toString(16).toUpperCase()}.toByte()")
            if (stream.available() > 0) {
                str.append(", ")
            }
        }
        str.append(")")
        return str.toString()
    }
}